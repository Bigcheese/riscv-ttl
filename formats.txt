Formats:

31      | 30     25 | 24 21 |    20   | 19 15 | 14  12 | 11     8 |    7    | 6 0    |
funct7              | rs2             | rs1   | funct3 | rd                 | opcode | R-type
imm[11:0]                             | rs1   | funct3 | rd                 | opcode | I-type
imm[11:5]           | rs2             | rs1   | funct3 | imm[4:0]           | opcode | S-type
imm[12] | imm[10:5] | rs2             | rs1   | funct3 | imm[4:1] | imm[11] | opcode | B-type
imm[31:12]                                             | rd                 | opcode | U-type
imm[20] | imm[10:1]         | imm[11] | imm[19:12]     | rd                 | opcode | J-type

01101 U
00101 U
11011 J
11000 B
01000 S
00000 I
00100 I
01100 R

LUI    | rd = imm
AUIPC  | rd = pc + imm
JAL    | rd = pc + 4; pc = imm
JALR   | rd = pc + 4; pc = (rs1 + imm) & ~32'b1
BEQ    | if rs1 == rs2: pc = pc + imm
BNE    | if rs1 != rs2: pc = pc + imm
BLT    | if rs1 < rs2: pc = pc + imm
BGE    | if rs1 >= rs2: pc = pc + imm
BLTU   | if rs1 <U rs2: pc = pc + imm
BGEU   | if rs1 >=U rs2: pc = pc + imm
LB     | rd = sext(mem[rs1 + imm]:[7:0])
LH     | rd = sext(mem[rs1 + imm]:[15:0])
LW     | rd = mem[rs1 + imm]
LBU    | rd = zext(mem[rs1 + imm]:[7:0])
LHU    | rd = zext(mem[rs1 + imm]:[15:0])
SB     | mem[rs1 + imm][7:0] = rs2[7:0]
SH     | mem[rs1 + imm][7:0] = rs2[15:0]
SW     | mem[rs1 + imm] = rs2
ADDI   | rd = rs1 + imm
SLTI   | rd = rs1 < imm ? 1 : 0
SLTIU  | rd = rs1 <U imm ? 1 : 0
XORI   | rd = rs1 ^ imm
ORI    | rd = rs1 | imm
ANDI   | rd = rs1 & imm
SLLI   | rd = rs1 << imm
SRLI   | rd = rs1 >> imm
SRAI   | rd = rs1 >>A imm
ADD    | rd = rs1 + rs2
SUB    | rd = rs1 - rs2
SLL    | rd = rs1 << rs2
SLT    | rd = rs1 < rs2 ? 1 : 0
SLTU   | rd = rs1 <U rs2 ? 1 : 0
XOR    | rd = rs1 ^ rs2
SRL    | rd = rs1 >> rs2
SRA    | rd = rs1 >>A rs2
OR     | rd = rs1 | rs2
AND    | rd = rs2 & rs2
